# zcert Playbook Configuration File
# This file defines certificate management workflows with automated deployment
# Usage: zcert run --file playbook.yaml

config:
  connection:
    credentials:
      hawk-id: '{{ZTPKI_HAWK_ID}}'
      hawk-api: '{{ZTPKI_HAWK_SECRET}}'
      platform: '{{ZTPKI_URL}}'

certificateTasks:
  # Example 1: Web Server Certificate with comprehensive configuration
  - name: "WebServerCert"
    renewBefore: 30d
    request:
      csr: local
      subject:
        commonName: "www.example.com"
        country: US
        state: California
        locality: San Francisco
        organization: Example Corp
      policy: '{{ZTPKI_POLICY_ID}}'
      # Subject Alternative Names (SAN)
      sans:
        dns:
          - "example.com"
          - "api.example.com"
          - "mail.example.com"
    installations:
      - format: PEM
        file: "./certs/webserver.crt"
        chainFile: "./certs/webserver.chain.crt"
        keyFile: "./certs/webserver.key"
        backupExisting: true
        # Optional: Run command after certificate installation
        # afterInstallAction: "systemctl reload nginx"

  # Example 2: Simple API Certificate (minimal configuration)
  - name: "APICert"
    renewBefore: 15d
    request:
      csr: local
      subject:
        commonName: "api.example.com"
        country: US
        organization: Example Corp
      policy: '{{ZTPKI_POLICY_ID}}'
    installations:
      - format: PEM
        file: "./certs/api.crt"
        keyFile: "./certs/api.key"

  # Example 3: Database Certificate with IP SAN
  - name: "DatabaseCert"
    renewBefore: 45d
    request:
      csr: local
      subject:
        commonName: "db.example.com"
        country: US
        state: California
        locality: San Francisco
        organization: Example Corp
        orgUnits: ["Database Team"]
      policy: '{{ZTPKI_POLICY_ID}}'
      sans:
        dns:
          - "db.example.com"
          - "db-primary.example.com"
        ip:
          - "10.0.1.100"
          - "10.0.1.101"
    installations:
      - format: PEM
        file: "./certs/database.crt"
        chainFile: "./certs/database.chain.crt"
        keyFile: "./certs/database.key"
        password: "db-cert-password"
        backupExisting: true
        afterInstallAction: "systemctl restart postgresql"

# Notes:
# - Replace {{ZTPKI_HAWK_ID}}, {{ZTPKI_HAWK_SECRET}}, {{ZTPKI_URL}}, and {{ZTPKI_POLICY_ID}} with your values
# - Or set environment variables: ZTPKI_HAWK_ID, ZTPKI_HAWK_SECRET, ZTPKI_URL, ZTPKI_POLICY_ID
# - Create directory: mkdir -p ./certs
# - Run: zcert run --file playbook.yaml