ZCert CLI run Feature – Technical Specification
Overview
The zcert run command introduces playbook functionality to the Venafi ZCert CLI. This feature allows users to execute a sequence of certificate operations defined in a YAML “playbook” file. The playbook contains connection settings and one or more certificate tasks (requests and installations) to automate end-to-end certificate enrollment and deployment. In essence, zcert run reads the YAML configuration, requests or renews certificates as specified, and installs them to the target locations (files, keystores, etc.), optionally performing post-installation actions. This specification covers the current capabilities of zcert run and outlines a development plan in three sprints to implement and test this functionality.

zcert run Command and Flags
The zcert run command is invoked with optional flags to specify the playbook file and behavior. Supported flags for the run command include:

-f, --file <path> – Path to the YAML playbook file to execute. If not provided, defaults to playbook.yaml in the current directory.

--force-renew – Boolean flag to ignore certificate validity and force a new enrollment. When set, ZCert will request a new certificate regardless of the current certificate’s expiration date, overriding the playbook’s renewal logic.

-h, --help – Displays help information for the run command, including usage and flag descriptions.

Other global flags (such as verbosity or trust store options) are inherited from ZCert’s global configuration if applicable. Below is an example help output for zcert run:

bash
Copy
Edit
$ zcert run --help
Usage: 
  zcert run [--file PLAYBOOK] [--force-renew]

Flags:
  -f, --file string      Playbook YAML file to execute (default "playbook.yaml")
      --force-renew      Force renew certificates regardless of current expiration
  -h, --help             Show help for the run command
Playbook YAML Configuration Format
Users define certificate operations in a YAML playbook file. The playbook has two main sections: config (connection settings) and certificateTasks (an array of one or more tasks). Key elements of the YAML format include:

Connection Configuration (config.connection): Specifies how to connect to the Venafi platform (Trust Protection Platform on-prem, Venafi as a Service Cloud, or Firefly). It includes:

platform – The Venafi platform type (e.g. tpp, vaas, firefly).

url – URL of the Venafi endpoint.

insecure – Boolean to skip TLS verification if needed.

trustBundle – Path to a trust bundle file if custom TLS trust is required.

Credentials – Authentication details, which can be an API key for cloud or username/password or OAuth for TPP. The YAML supports embedding credentials directly or via environment variables, e.g. apiKey: '{{ Env "ZCERT_APIKEY" }}'.

Certificate Tasks (certificateTasks): A list of tasks to execute in order. Each task represents a certificate enrollment/renewal and installation workflow. For each CertificateTask, the YAML defines:

name – Descriptive name for logging.

renewBefore – Renewal threshold (duration or percentage).

request – Certificate request details, including zone, CSR mode (service or local), key parameters, subject DN details, SANs, etc.

installations – One or more installation targets. Each specifies format (PEM, PKCS12, JKS, CAPI), file paths, passwords, backup behavior, and afterInstallAction.

setEnvVars – Optional environment variables to export for later tasks.

All tasks run sequentially; failures abort with non-zero exit.

Example Playbook:

yaml
Copy
Edit
config:
  connection:
    platform: vaas
    credentials:
      apiKey: '{{ Env "ZCERT_APIKEY" }}'
certificateTasks:
  - name: "WebServerCert"
    renewBefore: 30d
    request:
      csr: service
      subject:
        commonName: "example.com"
        country: US
        state: Utah
        locality: Salt Lake City
        organization: Example Corp
        orgUnits: ["IT Ops"]
      zone: "My Application\\Default"
    installations:
      - format: PEM
        file: "/etc/nginx/tls/example.crt"
        chainFile: "/etc/nginx/tls/example.chain.crt"
        keyFile: "/etc/nginx/tls/example.key"
        afterInstallAction: "systemctl reload nginx"
Sprint 1 – Core Playbook Execution
Objective: Implement the basic zcert run workflow for a single task with PEM output.

Tasks:

Command Parsing: Add run subcommand; parse --file and --force-renew.

YAML Parsing: Load playbook via gopkg.in/yaml.v3; support {{ Env }} interpolation.

Validation: Use IsValid() on Config, CertificateTask, Installation to enforce required fields.

Enrollment Logic:

Initialize Venafi client (zcert.NewClient).

Check existing cert file; apply renewBefore logic or --force-renew.

Request certificate (blocking call).

PEM Installation:

Write cert, key, chain to disk; handle backups.

Execute afterInstallAction via subprocess.

Logging: Informational output for each major step.

Unit Tests:

YAML parsing/validation tests.

Renewal logic tests using dummy cert files.

PEM installation tests with temp dirs and backup behavior.

afterInstallAction execution test (mock or harmless command).

Done: zcert run processes a playbook with one task, produces PEM certs, and is covered by basic unit tests.