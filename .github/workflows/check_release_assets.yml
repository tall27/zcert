name: Minimal OpenSSL Artifact Check

on:
  push:
  workflow_dispatch:
    inputs:
      openssl_version:
        description: 'OpenSSL Version to check (e.g., 3.5.0)'
        required: true
        default: '3.5.0'

permissions:
  contents: read # Only read access is needed to list workflow runs/artifacts

env:
  # The repository where OpenSSL build workflows run and upload artifacts
  COMPILE_REPO: "tall27/compile"

jobs:
  check-openssl-artifact:
    runs-on: ubuntu-latest
    outputs:
      openssl-found: ${{ steps.download-openssl.outcome == 'success' }} # Output true if download succeeds

    steps:
      - name: Checkout repository (for context, not strictly needed for this check)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }} # Checkout current repo

      - name: Set dynamic variables (for logging)
        id: set-vars
        run: |
          echo "OPENSSL_EXPECTED_ARTIFACT=openssl-${{ github.event.inputs.openssl_version }}-x64-linux-portable" >> $GITHUB_ENV
          echo "OPENSSL_BUILD_WORKFLOW=openssl-3.5-linux.yaml" >> $GITHUB_ENV
          echo "TARGET_REPO=${{ env.COMPILE_REPO }}" >> $GITHUB_ENV
        shell: bash

      - name: Log Checking for OpenSSL artifact
        run: |
          echo "Attempting to download artifact:"
          echo "  Workflow: ${{ env.OPENSSL_BUILD_WORKFLOW }}"
          echo "  Artifact Name: ${{ env.OPENSSL_EXPECTED_ARTIFACT }}"
          echo "  From Repository: ${{ env.TARGET_REPO }}"
          echo "  OpenSSL Version Input: ${{ github.event.inputs.openssl_version }}"
      - name: Download OpenSSL artifact
        id: download-openssl
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ env.OPENSSL_BUILD_WORKFLOW }} # Name of the workflow file in COMPILE_REPO
          workflow_conclusion: success # Only download if the source workflow run was successful
          name: ${{ env.OPENSSL_EXPECTED_ARTIFACT }} # Exact name of the artifact to download
          repo: ${{ env.TARGET_REPO }} # Repository where the artifact is located
          path: openssl-artifact # Directory to download the artifact into
        continue-on-error: true # Allow this step to fail without stopping the workflow, so we can log more details
        # This step will set its 'outcome' to 'failure' if the artifact is not found.

      - name: Log Download result
        run: |
          echo "Download OpenSSL artifact step outcome: ${{ steps.download-openssl.outcome }}"
          if [[ "${{ steps.download-openssl.outcome }}" == "success" ]]; then
            echo "✅ OpenSSL artifact '${{ env.OPENSSL_EXPECTED_ARTIFACT }}' found and downloaded successfully."
            echo "Listing contents of downloaded artifact directory:"
            ls -la openssl-artifact/ || echo "Directory is empty or inaccessible."
            echo "Recursive listing:"
            ls -R openssl-artifact/ || echo "Recursive listing failed."
          else
            echo "❌ OpenSSL artifact '${{ env.OPENSSL_EXPECTED_ARTIFACT }}' was NOT found or download failed."
            echo "Possible reasons:"
            echo "  1. The workflow '${{ env.OPENSSL_BUILD_WORKFLOW }}' in '${{ env.TARGET_REPO }}' has no successful runs."
            echo "  2. The artifact name '${{ env.OPENSSL_EXPECTED_ARTIFACT }}' does not match any artifact uploaded by that workflow."
            echo "  3. The artifact has expired (default retention is 90 days)."
            echo "  4. Permissions issue (though 'contents: read' should be sufficient)."
          fi
      - name: Report Final Outcome
        run: |
          echo "Final check result: OpenSSL artifact found: ${{ steps.download-openssl.outcome == 'success' }}"
